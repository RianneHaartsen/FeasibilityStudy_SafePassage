%% Safe Passage; 6) Extraction of periodic power for statistical analyses in R

% This script takes the tables created in the previous SafePassage scripts 


% Output:
% 1 table in long format with columns: ID, Condition, FoI, Region, and dependent
% variable
% Dependent variables: number of epochs, canonical power, periodic peak
% frequency, periodic peak amplitude, aperiodic slope, aperiodic intercept,
% periodic power

% Created by Rianne Haartsen, July 2022

%% Load data
clear all
cd XXX

% number of clean epochs (identical across regions)
load SP_Soc_DataAvailability.mat
load SP_NSoc_DataAvailability.mat

% canonical power and aperiodic slope and intercept
load SP_Soc_EEGmeasures_perRegion.mat
load SP_NSoc_EEGmeasures_perRegion.mat

% periodic peak info
load SP_Soc_FOOOFpeaks_perRegion.mat
load SP_NSoc_FOOOFpeaks_perRegion.mat

% periodic power
load SP_Soc_PeriodicPower.mat
load SP_NSoc_PeriodicPower.mat

% check whether ID numbers are in the same rows for all 8 datasets
% DA = sum(strcmp(SP_Soc_DataAvailability.ID, SP_NSoc_DataAvailability.ID),1);
% D2 = sum(strcmp(SP_Soc_EEGmeasures_perRegion.ID, SP_NSoc_EEGmeasures_perRegion.ID),1);
% D3 = sum(strcmp(SP_Soc_FOOOFPeaks_perRegion.Var1, SP_NSoc_FOOOFPeaks_perRegion.Var1),1);
% D4 = sum(strcmp(SP_Soc_PeriodicPower.ID, SP_Soc_PeriodicPower.ID),1);
% D5 = sum(strcmp(SP_Soc_DataAvailability.ID, SP_NSoc_EEGmeasures_perRegion.ID),1);
% D6 = sum(strcmp(SP_Soc_FOOOFPeaks_perRegion.Var1, SP_Soc_PeriodicPower.ID),1);

%% Create 1 dataset with a long format

for ss = 1:height(SP_Soc_EEGmeasures_perRegion) % for each subject
    
    IDcur = SP_Soc_EEGmeasures_perRegion.ID(ss);
    
        % frequency band
        FrequencyBandofInterest = [repmat({'theta'},4,1); repmat({'alpha'},4,1)];
        % region
        Regs = {'Frontal';'Central';'Parietal';'Occipital'};
        Region = repmat(Regs,2,1);
        
    % social condition %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
        ID = repmat(IDcur,8,1);
        Condition = repmat({'social'},8,1);
        % clean epochs
        NumberofCleanEpochs = repmat(SP_Soc_DataAvailability.Neps_Sclean(ss),8,1);
        % power value
        CanonicalPower = num2cell([SP_Soc_EEGmeasures_perRegion.Fr_CanLogPow_theta(ss); ...
            SP_Soc_EEGmeasures_perRegion.Ce_CanLogPow_theta(ss); ...
            SP_Soc_EEGmeasures_perRegion.Pa_CanLogPow_theta(ss); ...
            SP_Soc_EEGmeasures_perRegion.Oc_CanLogPow_theta(ss); ...
            SP_Soc_EEGmeasures_perRegion.Fr_CanLogPow_alpha(ss); ...
            SP_Soc_EEGmeasures_perRegion.Ce_CanLogPow_alpha(ss); ...
            SP_Soc_EEGmeasures_perRegion.Pa_CanLogPow_alpha(ss); ...
            SP_Soc_EEGmeasures_perRegion.Oc_CanLogPow_alpha(ss)]);
        % FOOOF fit, intercept and slope
        FOOOFrSquared = num2cell([SP_Soc_EEGmeasures_perRegion.Fr_rSq(ss); ...
            SP_Soc_EEGmeasures_perRegion.Ce_rSq(ss); ...
            SP_Soc_EEGmeasures_perRegion.Pa_rSq(ss); ...
            SP_Soc_EEGmeasures_perRegion.Oc_rSq(ss); ...
            SP_Soc_EEGmeasures_perRegion.Fr_rSq(ss); ...
            SP_Soc_EEGmeasures_perRegion.Ce_rSq(ss); ...
            SP_Soc_EEGmeasures_perRegion.Pa_rSq(ss); ...
            SP_Soc_EEGmeasures_perRegion.Oc_rSq(ss)]);
        FOOOFIntercept = num2cell([SP_Soc_EEGmeasures_perRegion.Fr_intercept(ss); ...
            SP_Soc_EEGmeasures_perRegion.Ce_intercept(ss); ...
            SP_Soc_EEGmeasures_perRegion.Pa_intercept(ss); ...
            SP_Soc_EEGmeasures_perRegion.Oc_intercept(ss); ...
            SP_Soc_EEGmeasures_perRegion.Fr_intercept(ss); ...
            SP_Soc_EEGmeasures_perRegion.Ce_intercept(ss); ...
            SP_Soc_EEGmeasures_perRegion.Pa_intercept(ss); ...
            SP_Soc_EEGmeasures_perRegion.Oc_intercept(ss)]);
        FOOOFSlope = num2cell([SP_Soc_EEGmeasures_perRegion.Fr_slope(ss); ...
            SP_Soc_EEGmeasures_perRegion.Ce_slope(ss); ...
            SP_Soc_EEGmeasures_perRegion.Pa_slope(ss); ...
            SP_Soc_EEGmeasures_perRegion.Oc_slope(ss); ...
            SP_Soc_EEGmeasures_perRegion.Fr_slope(ss); ...
            SP_Soc_EEGmeasures_perRegion.Ce_slope(ss); ...
            SP_Soc_EEGmeasures_perRegion.Pa_slope(ss); ...
            SP_Soc_EEGmeasures_perRegion.Oc_slope(ss)]);
        % Periodic peaks; frequency and amplitude
        PeriodicPeakFrequency = num2cell([SP_Soc_FOOOFPeaks_perRegion.Fr_theta_Freq(ss); ...
            SP_Soc_FOOOFPeaks_perRegion.Ce_theta_Freq(ss); ...
            SP_Soc_FOOOFPeaks_perRegion.Pa_theta_Freq(ss); ...
            SP_Soc_FOOOFPeaks_perRegion.Oc_theta_Freq(ss); ...
            SP_Soc_FOOOFPeaks_perRegion.Fr_alpha_Freq(ss); ...
            SP_Soc_FOOOFPeaks_perRegion.Ce_alpha_Freq(ss); ...
            SP_Soc_FOOOFPeaks_perRegion.Pa_alpha_Freq(ss); ...
            SP_Soc_FOOOFPeaks_perRegion.Oc_alpha_Freq(ss)]);
        PeriodicPeakAmplitude = num2cell([SP_Soc_FOOOFPeaks_perRegion.Fr_theta_Ampl(ss); ...
            SP_Soc_FOOOFPeaks_perRegion.Ce_theta_Ampl(ss); ...
            SP_Soc_FOOOFPeaks_perRegion.Pa_theta_Ampl(ss); ...
            SP_Soc_FOOOFPeaks_perRegion.Oc_theta_Ampl(ss); ...
            SP_Soc_FOOOFPeaks_perRegion.Fr_alpha_Ampl(ss); ...
            SP_Soc_FOOOFPeaks_perRegion.Ce_alpha_Ampl(ss); ...
            SP_Soc_FOOOFPeaks_perRegion.Pa_alpha_Ampl(ss); ...
            SP_Soc_FOOOFPeaks_perRegion.Oc_alpha_Ampl(ss)]);
        % Periodic power
        PeriodicPower = num2cell([SP_Soc_PeriodicPower.Fr_PerPower_th(ss); ...
            SP_Soc_PeriodicPower.Ce_PerPower_th(ss); ...
            SP_Soc_PeriodicPower.Pa_PerPower_th(ss); ...
            SP_Soc_PeriodicPower.Oc_PerPower_th(ss); ...
            SP_Soc_PeriodicPower.Fr_PerPower_al(ss); ...
            SP_Soc_PeriodicPower.Ce_PerPower_al(ss); ...
            SP_Soc_PeriodicPower.Pa_PerPower_al(ss); ...
            SP_Soc_PeriodicPower.Oc_PerPower_al(ss)]);
    
        Table_soc = table(ID, Condition, FrequencyBandofInterest, Region, ...
            NumberofCleanEpochs, CanonicalPower, FOOOFrSquared, FOOOFIntercept, FOOOFSlope, ...
            PeriodicPeakFrequency, PeriodicPeakAmplitude, PeriodicPower);
        clear NumberofCleanEpochs CanonicalPower FOOOFrSquared FOOOFIntercept FOOOFSlope
        clear PeriodicPeakFrequency PeriodicPeakAmplitude PeriodicPower
        
    % non-social condition %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
        Condition = repmat({'non-social'},8,1);
        % clean epochs
        NumberofCleanEpochs = repmat(SP_NSoc_DataAvailability.Neps_NSclean(ss),8,1);
        % canonical power
        CanonicalPower = num2cell([SP_NSoc_EEGmeasures_perRegion.Fr_CanLogPow_theta(ss); ...
            SP_NSoc_EEGmeasures_perRegion.Ce_CanLogPow_theta(ss); ...
            SP_NSoc_EEGmeasures_perRegion.Pa_CanLogPow_theta(ss); ...
            SP_NSoc_EEGmeasures_perRegion.Oc_CanLogPow_theta(ss); ...
            SP_NSoc_EEGmeasures_perRegion.Fr_CanLogPow_alpha(ss); ...
            SP_NSoc_EEGmeasures_perRegion.Ce_CanLogPow_alpha(ss); ...
            SP_NSoc_EEGmeasures_perRegion.Pa_CanLogPow_alpha(ss); ...
            SP_NSoc_EEGmeasures_perRegion.Oc_CanLogPow_alpha(ss)]);
        % FOOOF fit, intercept and slope
        FOOOFrSquared = num2cell([SP_NSoc_EEGmeasures_perRegion.Fr_rSq(ss); ...
            SP_NSoc_EEGmeasures_perRegion.Ce_rSq(ss); ...
            SP_NSoc_EEGmeasures_perRegion.Pa_rSq(ss); ...
            SP_NSoc_EEGmeasures_perRegion.Oc_rSq(ss); ...
            SP_NSoc_EEGmeasures_perRegion.Fr_rSq(ss); ...
            SP_NSoc_EEGmeasures_perRegion.Ce_rSq(ss); ...
            SP_NSoc_EEGmeasures_perRegion.Pa_rSq(ss); ...
            SP_NSoc_EEGmeasures_perRegion.Oc_rSq(ss)]);
        FOOOFIntercept = num2cell([SP_NSoc_EEGmeasures_perRegion.Fr_intercept(ss); ...
            SP_NSoc_EEGmeasures_perRegion.Ce_intercept(ss); ...
            SP_NSoc_EEGmeasures_perRegion.Pa_intercept(ss); ...
            SP_NSoc_EEGmeasures_perRegion.Oc_intercept(ss); ...
            SP_NSoc_EEGmeasures_perRegion.Fr_intercept(ss); ...
            SP_NSoc_EEGmeasures_perRegion.Ce_intercept(ss); ...
            SP_NSoc_EEGmeasures_perRegion.Pa_intercept(ss); ...
            SP_NSoc_EEGmeasures_perRegion.Oc_intercept(ss)]);
        FOOOFSlope = num2cell([SP_Soc_EEGmeasures_perRegion.Fr_slope(ss); ...
            SP_NSoc_EEGmeasures_perRegion.Ce_slope(ss); ...
            SP_NSoc_EEGmeasures_perRegion.Pa_slope(ss); ...
            SP_NSoc_EEGmeasures_perRegion.Oc_slope(ss); ...
            SP_NSoc_EEGmeasures_perRegion.Fr_slope(ss); ...
            SP_NSoc_EEGmeasures_perRegion.Ce_slope(ss); ...
            SP_NSoc_EEGmeasures_perRegion.Pa_slope(ss); ...
            SP_NSoc_EEGmeasures_perRegion.Oc_slope(ss)]);
        % Periodic peaks; frequency and amplitude
        PeriodicPeakFrequency = num2cell([SP_NSoc_FOOOFPeaks_perRegion.Fr_theta_Freq(ss); ...
            SP_NSoc_FOOOFPeaks_perRegion.Ce_theta_Freq(ss); ...
            SP_NSoc_FOOOFPeaks_perRegion.Pa_theta_Freq(ss); ...
            SP_NSoc_FOOOFPeaks_perRegion.Oc_theta_Freq(ss); ...
            SP_NSoc_FOOOFPeaks_perRegion.Fr_alpha_Freq(ss); ...
            SP_NSoc_FOOOFPeaks_perRegion.Ce_alpha_Freq(ss); ...
            SP_NSoc_FOOOFPeaks_perRegion.Pa_alpha_Freq(ss); ...
            SP_NSoc_FOOOFPeaks_perRegion.Oc_alpha_Freq(ss)]);
        PeriodicPeakAmplitude = num2cell([SP_NSoc_FOOOFPeaks_perRegion.Fr_theta_Ampl(ss); ...
            SP_NSoc_FOOOFPeaks_perRegion.Ce_theta_Ampl(ss); ...
            SP_NSoc_FOOOFPeaks_perRegion.Pa_theta_Ampl(ss); ...
            SP_NSoc_FOOOFPeaks_perRegion.Oc_theta_Ampl(ss); ...
            SP_NSoc_FOOOFPeaks_perRegion.Fr_alpha_Ampl(ss); ...
            SP_NSoc_FOOOFPeaks_perRegion.Ce_alpha_Ampl(ss); ...
            SP_NSoc_FOOOFPeaks_perRegion.Pa_alpha_Ampl(ss); ...
            SP_NSoc_FOOOFPeaks_perRegion.Oc_alpha_Ampl(ss)]);
        % Periodic power
        PeriodicPower = num2cell([SP_NSoc_PeriodicPower.Fr_PerPower_th(ss); ...
            SP_NSoc_PeriodicPower.Ce_PerPower_th(ss); ...
            SP_NSoc_PeriodicPower.Pa_PerPower_th(ss); ...
            SP_NSoc_PeriodicPower.Oc_PerPower_th(ss); ...
            SP_NSoc_PeriodicPower.Fr_PerPower_al(ss); ...
            SP_NSoc_PeriodicPower.Ce_PerPower_al(ss); ...
            SP_NSoc_PeriodicPower.Pa_PerPower_al(ss); ...
            SP_NSoc_PeriodicPower.Oc_PerPower_al(ss)]);
    
        Table_nsoc = table(ID, Condition, FrequencyBandofInterest, Region, ...
            NumberofCleanEpochs, CanonicalPower, FOOOFrSquared, FOOOFIntercept, FOOOFSlope, ...
            PeriodicPeakFrequency, PeriodicPeakAmplitude, PeriodicPower);
        clear NumberofCleanEpochs CanonicalPower FOOOFrSquared FOOOFIntercept FOOOFSlope
        clear PeriodicPeakFrequency PeriodicPeakAmplitude PeriodicPower
    
    
        
    
    % organise new data and add to table
        Table_newID = [Table_soc; Table_nsoc];
        
        cd('/Users/riannehaartsen/Documents/02f_SafePassage/SP_DataSharing')
        if exist('SP_EEGmetrics_longformat.mat','file') == 2
            load SP_EEGmetrics_longformat.mat
        end
        if ss == 1
            SP_EEGmetrics_longformat = Table_newID;
        else
            SP_EEGmetrics_longformat_new = [SP_EEGmetrics_longformat; Table_newID];
            clear SP_EEGmetrics_longformat
            SP_EEGmetrics_longformat = SP_EEGmetrics_longformat_new;
            clear SP_EEGmetrics_longformat_new
        end
        save('SP_EEGmetrics_longformat.mat','SP_EEGmetrics_longformat')
      % clear up
        clear SP_EEGmetrics_longformat Table_newID Table_soc Table_nsoc 
        clear IDcur Condition Region FrequencyBandofInterest Regs SCanPow NSCanPow
        clear ID   
end


%% Visual checks to ensure the data is valid

Xinds = 1:1:height(SP_EEGmetrics_longformat);
figure; scatter(Xinds', cell2mat(SP_EEGmetrics_longformat.CanonicalPower))
hold on
scatter(Xinds', cell2mat(SP_EEGmetrics_longformat.PeriodicPower))

figure; scatter(Xinds', SP_EEGmetrics_longformat.NumberofCleanEpochs)
figure; scatter(Xinds', cell2mat(SP_EEGmetrics_longformat.FOOOFrSquared))
figure; scatter(Xinds', cell2mat(SP_EEGmetrics_longformat.FOOOFSlope))
hold on
scatter(Xinds', cell2mat(SP_EEGmetrics_longformat.FOOOFIntercept))

figure; scatter(Xinds', cell2mat(SP_EEGmetrics_longformat.PeriodicPeakFrequency))
figure; scatter(Xinds', cell2mat(SP_EEGmetrics_longformat.PeriodicPeakAmplitude))
